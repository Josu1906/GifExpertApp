{"version":3,"sources":["Components/AddCategory/AddCategory.js","Components/GiftGridItem/GiftGridItem.js","Helpers/getGifs.js","Components/GifGrid/GifGrid.js","hooks/useFetchGifs.js","Components/GifExpertApp/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setstate","onSubmit","e","preventDefault","cast","type","value","onChange","target","GiftGridItem","id","title","url","className","src","alt","getGif","category","a","encodeURI","fetch","peticion","json","data","gifs","map","img","images","downsized_medium","console","log","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","categorie","ReactDOM","render","document","getElementById"],"mappings":"2MAwCeA,EAjCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACNC,mBAAS,IADH,mBAC9BC,EAD8B,KAClBC,EADkB,KAgBrC,OACE,mCACA,sBAAMC,SAba,SAACC,GACpBA,EAAEC,iBAEe,IAAdJ,EACDF,GAAc,SAAAO,GAAI,mBAAQA,OAE1BP,GAAc,SAAAO,GAAI,OAAKL,GAAL,mBAAoBK,OACtCJ,EAAS,MAMX,SACA,uBACAK,KAAK,OACJC,MAAOP,EACNQ,SAnBsB,SAAEL,GAAF,OAASF,EAASE,EAAEM,OAAOF,e,QCR5CG,EAAe,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACvC,OACE,sBAAKC,UAAU,2CAAf,UACA,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCNKK,EAAM,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACdN,EADc,gDACiCO,UAAUF,GAD3C,+DAEGG,MAAMR,GAFT,cAEdS,EAFc,gBAGCA,EAASC,OAHV,uBAGbC,EAHa,EAGbA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACLhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAGtCiB,QAAQC,IAAIP,GAZQ,kBAcbC,GAda,4CAAH,sDCKNO,EAAU,SAAC,GAAkB,IAAhBd,EAAe,EAAfA,SAAe,ECHb,SAACA,GAAc,IAAD,EACdnB,mBAAS,CACjCyB,KAAM,GACNS,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAmBxC,OAbAC,qBAAU,WACRnB,EAAOC,GACNmB,MAAK,SAAAC,GACJC,YAAW,WACTT,QAAQC,IAAIO,GACZH,EAAS,CACPX,KAAMc,EACNL,SAAS,MAEV,UAGJ,CAACf,IACGgB,EDbiBM,CAAatB,GAA9BM,EAHgC,EAGhCA,KAAMS,EAH0B,EAG1BA,QAOX,OACE,qCACA,qBAAInB,UAAU,+CAAd,uBAAwEI,KAEtEe,GAAW,mBAAGnB,UAAU,8CAAb,wBAEb,qBAAKA,UAAU,YAAf,SAEIU,EAAKE,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEIA,GADCA,EAAIhB,aEIN8B,EAxBM,WAAM,MAGa1C,mBAAS,IAHtB,mBAGhB2C,EAHgB,KAGJ5C,EAHI,KAOvB,OACA,qCACA,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,6BAEQ4C,EAAWhB,KAAI,SAAAiB,GAEX,OAAO,cAAC,EAAD,CAAyBzB,SAAUyB,GAArBA,YChBrCC,IAASC,OAAO,cAAC,EAAD,IAAmBC,SAASC,eAAe,W","file":"static/js/main.5ff20d51.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst setCategories = null;\r\n\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n    const [inputValue, setstate] = useState('');\r\n\r\n    const handleInputChange = ( e ) => setstate(e.target.value); //Asi cambiamos el estado\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault()\r\n\r\n      if(inputValue == ''){\r\n        setCategories(cast => [...cast]);\r\n      }else{\r\n        setCategories(cast => [inputValue, ...cast]);\r\n        setstate('');\r\n      }\r\n    }\r\n\r\n    return (\r\n      <>\r\n      <form onSubmit={handleSubmit}>\r\n      <input\r\n      type='text'\r\n       value={inputValue}\r\n        onChange={handleInputChange}\r\n        />\r\n      </form>\r\n      </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AddCategory;\r\n","import React from 'react';\r\n\r\nexport const GiftGridItem = ({id, title, url}) => {\r\n  return (\r\n    <div className='card animate__animated animate__fadeInUp'>\r\n    <img src={url} alt={title} />\r\n    <p>{title}</p>\r\n    </div>\r\n  )\r\n}\r\n","export const getGif = async(category) => {\r\n  const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=YxY7JolTtSPKd1jxc6S8b6roU9Fa17ib`;\r\n  const peticion = await fetch(url);\r\n  const {data} = await peticion.json();\r\n\r\n  const gifs = data.map( img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }\r\n  })\r\n  console.log(data)\r\n\r\n  return gifs;\r\n}\r\n","import React from 'react';\r\nimport {GiftGridItem} from '../GiftGridItem/GiftGridItem';\r\nimport { useFetchGifs } from '../../hooks/useFetchGifs';\r\n// import {getGif} from '../../Helpers/getGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  // const [images, setImages] = useState([]);\r\n  //\r\n  const {data, loading} = useFetchGifs(category);\r\n  // useEffect(() => {\r\n  //   getGif(category).then(setImages)\r\n  // }, [category]); //useEffect sirve para ejecutar una vez el codigo al renderizar, en las [] le decimos que la vez que cambie lo ejecute\r\n\r\n\r\n\r\n    return (\r\n      <>\r\n      <h3 className='animate__animated animate__lightSpeedInRight'>Buscaste: {category}</h3>\r\n      {\r\n        loading && <p className='animate__animated animate__lightSpeedInLeft'>Loading...</p>\r\n      }\r\n      <div className='card-grid'>\r\n        {\r\n          data.map(img => (\r\n            <GiftGridItem\r\n            key={img.id}\r\n            {...img} //img={img} Se hace de esta forma pero de esta tambien\r\n            />\r\n          ))\r\n        }\r\n      </div>\r\n      </>\r\n    )\r\n}\r\n\r\n// <ol>\r\n//     {\r\n  //       images.map(img => {\r\n    //         // return (\r\n      //         //   <div key={img.id}>\r\n      //         //   <li><b>Id:</b> {img.id}</li>\r\n      //         //   <li><b>Title:</b> {img.title}</li>\r\n      //         //   <li><b>Url:</b> {img.url}</li><br></br>\r\n      //         //   </div>\r\n      //         // )\r\n      //       })\r\n      //     }\r\n      // </ol>\r\n","import {useState, useEffect} from 'react';\r\nimport {getGif} from '../Helpers/getGifs';\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGif(category)\r\n    .then(imgs =>{\r\n      setTimeout(() => {\r\n        console.log(imgs)\r\n        setState({\r\n          data: imgs,\r\n          loading: false\r\n        })\r\n      }, 3000)\r\n    }\r\n    )\r\n  }, [category]); //useEffect sirve para ejecutar una vez el codigo al renderizar, en las [] le decimos que la vez que cambie lo ejecute\r\n  return state;\r\n}\r\n","import React, {useState} from \"react\";\r\nimport AddCategory from \"../AddCategory/AddCategory\";\r\nimport {GifGrid} from \"../GifGrid/GifGrid\"\r\n//rafc para poner todo simplificado\r\n\r\nconst GifExpertApp = () => {\r\n    // const categories = ['Elon Musk', 'Thanos', 'Linterna Verde', 'Spider-man', 'Batman', 'Ironman'];\r\n    // const [categories, setCategories] = useState(['Elon Musk', 'Thanos', 'Linterna Verde', 'Spider-man', 'Batman', 'Ironman']);\r\n    const [categories, setCategories] = useState([]);\r\n    // const handelBand = () => {\r\n    //     return setCategories([...categories, 'Josue']);\r\n    // }\r\n    return (\r\n    <>\r\n    <h2>GifExpertApp</h2>\r\n    <hr></hr>\r\n    <AddCategory setCategories={setCategories}/>\r\n    {/* <button onClick={handelBand}>Agregar</button> */}\r\n    <ul>\r\n        {\r\n            categories.map(categorie => {\r\n                // return <li key={categorie}>{categorie}</li> //key le sirve a React para saber que item del array a sido eliminado o cambiado\r\n                return <GifGrid key={categorie} category={categorie}/>\r\n            })\r\n        }\r\n    </ul>\r\n    </>\r\n)}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport GifExpertApp from './Components/GifExpertApp/GifExpertApp';\r\n\r\n\r\nReactDOM.render(<GifExpertApp /> , document.getElementById('root'));\r\n"],"sourceRoot":""}